if (typeof JSON !== "object") {
    JSON = {}
}
(function () {
    var a;
    function b(o, q, n, h) {
        var s,
            c,
            m,
            p = n[q];
        switch (typeof p) {
            case "string":
                return '<span class="value">\'' + p + "'</span>";
            case "object":
                m = [];
                if (Object.prototype.toString.apply(p) === "[object Array]") {
                    c = p.length;
                    for (var f = 0; f < c; f += 1) {
                        m[f] = b(o + a, f, p, h) || "null"
                    }
                    var l = (m.length == 0 || m[0].indexOf("{") != -1);
                    if (l) {
                        s = "\n" + o + a + "[" + o + m.join(",") + "\n" + o + a + "]"
                    } else {
                        if (h) {
                            for (var e = 0; e < m.length; e++) {
                                m[e] = "\n" + o + a + (o != a ? a : "") + m[e]
                            }
                            s = "[" + m.join(", ") + "\n" + o + (o != a ? a : "") + "]"
                        } else {
                            s = "[" + m.join(", ") + "]"
                        }
                    }
                    return s
                }
                for (var d in p) {
                    if (Object.prototype.hasOwnProperty.call(p, d)) {
                        s = b(o + a, d, p, h);
                        if (s) {
                            var g = '<span class="key">' + d + "</span>";
                            m.push(o + a + (o ? a : "") + g + (o ? ": " : ": ") + s)
                        }
                    }
                }
                s = (o ? "\n" : "") + (o ? o + a : o) + "{\n" + m.join(",\n") + "\n" + o + (o ? a : "") + "}";
                return s
        }
    }
    JSON.convertToHumanReadableString = function (f, e, d) {
        var c;
        a = "";
        for (c = 0; c < e; c += 1) {
            a += " "
        }
        return b("", "", {
            "": f
        }, d)
    }
}());
var contentId = "content";
function getContentElement() {
    return document.getElementById(contentId)
}
function getScrollLeft() {
    return (window.pageXOffset !== undefined) ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft
}
function getScrollTop() {
    return (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop
}
function centerContent() {
    var b = (window.innerWidth > 0) ? window.innerWidth : screen.width;
    var a = (window.innerHeight > 0) ? window.innerHeight : screen.height;
    getContentElement().style.top = Math.max(0, ((a - getContentElement().offsetHeight) / 2) + getScrollTop()) + "px";
    getContentElement().style.left = Math.max(0, ((b - getContentElement().offsetWidth) / 2) + getScrollLeft()) + "px"
}
function r(a) {
    /in/.test(document.readyState) ? setTimeout("r(" + a + ")", 9) : a()
}
r(function () {
    reloadContent()
});
window.onresize = function (a) {
    reloadContent()
};
function setContent(a) {
    document.body.innerHTML = a
}
function reloadContent() {
    setContent(compileContent());
    centerContent()
}
function compileContent() {
    var a = "brauliop.3@gmail.com";
    var b = {
        name: "genetical",
        title: "genetic algorithm implementation",
        github: '<a href="https://github.com/elbraulio/genetical">https://github.com/elbraulio/genetical</a>',
        version: '<a href="https://jitpack.io/#com.elbraulio/genetical">' +
            '<img src="https://jitpack.io/v/com.elbraulio/genetical.svg">' +
            '</a>',
        author: '<a href="http://elbraulio.com">http://elbraulio.com</a>',
        badges: [
            '<a href="https://github.com/elbraulio/genetical/blob/master/LICENSE">' +
            '<img src="https://img.shields.io/badge/license-MIT-green.svg">' +
            '</a>',
            '<a href="https://travis-ci.org/elbraulio/genetical">' +
            '<img src="https://travis-ci.org/elbraulio/genetical.svg?branch=master">' +
            '</a>',
            '<a href="https://codecov.io/gh/elbraulio/genetical">' +
            '<img src="https://codecov.io/gh/elbraulio/genetical/branch/master/graph/badge.svg">' +
            '</a>',
            '<a href="https://codebeat.co/projects/github-com-elbraulio-genetical-master">' +
            '<img src="https://codebeat.co/badges/8a7c33db-0a64-4518-98bb-25e99e4c1db1">' +
            '</a>',
        ]
    };
    return "<pre id='" + contentId + "'>" + JSON.convertToHumanReadableString(b, 2, window.innerHeight > window.innerWidth) + "</pre>"
}
;

